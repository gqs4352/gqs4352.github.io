<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>试Linux端口的连通性的四种方法</title>
      <link href="2020/10/27/aa/"/>
      <url>2020/10/27/aa/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="测试Linux端口的连通性的四种方法"><a href="#测试Linux端口的连通性的四种方法" class="headerlink" title="测试Linux端口的连通性的四种方法"></a>测试Linux端口的连通性的四种方法</h1><p>Linux系统有时候需要测试某个端口的连通性,用户可以参考如下方法来测试。</p><h2 id="方法一、telnet法"><a href="#方法一、telnet法" class="headerlink" title="方法一、telnet法"></a><strong>方法一、telnet法</strong></h2><p> telnet为用户提供了在本地计算机上完成远程主机工作的能力,因此可以通过telnet来测试端口的连通性,具体用法格式:</p><p><strong>telnet ip port</strong> </p><p>说明:</p><p><strong>ip:</strong> 是测试主机的ip地址</p><p><strong>port:</strong> 是端口,比如80</p><p>如果telnet连接不存在的端口,那会如下图所示。</p><p><img src="http://aliyunzixunbucket.oss-cn-beijing.aliyuncs.com/jpg/009e68cdd64f3476b58d5eabffc28cf7.jpg?x-oss-process=image/resize,p_100/auto-orient,1/quality,q_90/format,jpg/watermark,image_eXVuY2VzaGk=,t_100,g_se,x_0,y_0" alt="Linux测试端口的连通性的四种方法"></p><p>如果telnet 连接存在端口会出现如下图所示的内容,下图中以80端口为例。</p><p><img src="http://aliyunzixunbucket.oss-cn-beijing.aliyuncs.com/jpg/71ef79d150a5e8a63e92d7889250cce2.jpg?x-oss-process=image/resize,p_100/auto-orient,1/quality,q_90/format,jpg/watermark,image_eXVuY2VzaGk=,t_100,g_se,x_0,y_0" alt="Linux测试端口的连通性的四种方法"></p><h2 id="方法二、ssh法"><a href="#方法二、ssh法" class="headerlink" title="方法二、ssh法"></a><strong>方法二、ssh法</strong></h2><p>SSH 是目前较可靠,专为远程登录会话和其他网络服务提供安全性的协议,在linux上可以通过ssh命令来测试端口的连通性,具体用法格式如下:</p><p>用法: <strong>ssh -v -p port <a href="https://www.aliyun.com/jiaocheng/129726.html">aliyunzixun@xxx.com</a></strong></p><p>说明:</p><p><strong>-v</strong>调试模式(会打印日志).</p><p><strong>-p</strong>指定端口</p><p><strong>username:</strong> 远程主机的登录用户</p><p><strong>ip:</strong> 远程主机</p><p>如果远程主机开通了相应的端口,会有如下图所示的建立成功的提示。</p><p><img src="http://aliyunzixunbucket.oss-cn-beijing.aliyuncs.com/jpg/8abd5ae20d0dd5cbc33095047fdc7d4a.jpg?x-oss-process=image/resize,p_100/auto-orient,1/quality,q_90/format,jpg/watermark,image_eXVuY2VzaGk=,t_100,g_se,x_0,y_0" alt="Linux测试端口的连通性的四种方法"></p><p>如果远程主机没有开通相应的端口,则如下图所示</p><p><img src="http://aliyunzixunbucket.oss-cn-beijing.aliyuncs.com/jpg/30bb7641ce29a897d8b344efa783d085.jpg?x-oss-process=image/resize,p_100/auto-orient,1/quality,q_90/format,jpg/watermark,image_eXVuY2VzaGk=,t_100,g_se,x_0,y_0" alt="Linux测试端口的连通性的四种方法"></p><h2 id="方法三、curl法"><a href="#方法三、curl法" class="headerlink" title="方法三、curl法"></a><strong>方法三、curl法</strong></h2><p>curl是利用URL语法在命令行方式下工作的开源文件传输工具。也可以用来测试端口的连通性,具体用法:</p><p><strong>curl ip:port</strong></p><p>说明:</p><p><strong>ip</strong>:是测试主机的ip地址</p><p><strong>port:</strong> 是端口,比如80</p><p>如果远程主机开通了相应的端口,都会输出信息,如果没有开通相应的端口,则没有任何提示,需要CTRL+C断开。</p><p><img src="http://aliyunzixunbucket.oss-cn-beijing.aliyuncs.com/jpg/3603623912d03932de77f6830910b340.jpg?x-oss-process=image/resize,p_100/auto-orient,1/quality,q_90/format,jpg/watermark,image_eXVuY2VzaGk=,t_100,g_se,x_0,y_0" alt="Linux测试端口的连通性的四种方法"></p><h2 id="方法四、wget方法"><a href="#方法四、wget方法" class="headerlink" title="方法四、wget方法"></a><strong>方法四、wget方法</strong></h2><p>wget是一个从网络上自动下载文件的自由工具**,支持通过HTTP、HTTPS、FTP三个最常见的TCP/IP协议下载**,并可以使用HTTP代理。wget名称的由来是<strong>“World Wide Web”与“get”的结</strong>合,它也可以用来测试端口的连通性具体用法:</p><p><strong>wget ip:port</strong></p><p>说明:</p><p><strong>ip:</strong> 是测试主机的ip地址</p><p><strong>port:</strong> 是端口,比如80</p><p>如果远程主机不存在端口则会一直提示连接主机。</p><p><img src="http://aliyunzixunbucket.oss-cn-beijing.aliyuncs.com/jpg/192fd66f1b2d3b22a0941e78627c50c5.jpg?x-oss-process=image/resize,p_100/auto-orient,1/quality,q_90/format,jpg/watermark,image_eXVuY2VzaGk=,t_100,g_se,x_0,y_0" alt="Linux测试端口的连通性的四种方法"></p><p>如果远程主机存在端口则会看到相应的信息,如下图所示。</p><p><img src="http://aliyunzixunbucket.oss-cn-beijing.aliyuncs.com/jpg/06f1b33f8702a1aa0ffa41166606a96a.jpg?x-oss-process=image/resize,p_100/auto-orient,1/quality,q_90/format,jpg/watermark,image_eXVuY2VzaGk=,t_100,g_se,x_0,y_0" alt="Linux测试端口的连通性的四种方法"></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word转MD文件</title>
      <link href="2020/10/27/article02/"/>
      <url>2020/10/27/article02/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>把网页的内容全部复制，丢进下面的网站，转为html格式，复制html代码文本<br /><a href="https://wordhtml.com/">WordHtml</a><br />把代码文本放在这里<br /><a href="https://tool.lu/markdown/">Html转MD</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA2020版Maven依赖成功导入但任然报错找不到包解决方案</title>
      <link href="2020/10/27/article01/"/>
      <url>2020/10/27/article01/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近换了新的idea版本，在使用maven联系springboot项目的时候，pom.xml中的依赖正确，点击运行按钮，报错找不到包</p><p>（例如：Error:(4, 52) java: 程序包org.springframework.beans.factory.annotation不存在），ctrl+鼠标左键却能定位到jar包（说明jar成功导入）<br /><img src="https://img-blog.csdnimg.cn/20200609114221753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjA1ODQ3Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br />报错原因：<br />IDEA启动程序按钮和maven的build使用的jar包环境不一样<br />解决方案：<br />设置idea构建/运行操作委托给maven就行了。具体设置：<br />Settings搜索Runner,勾选delegate ide build/run actions to maven</p><p><img src="https://img-blog.csdnimg.cn/2020060911432970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjA1ODQ3Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br />还要注意编码是否设置UTF-8</p>]]></content>
      
      
      <categories>
          
          <category> 遇到的问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven项目创建过慢与idea常用快捷键</title>
      <link href="2020/10/27/article03/"/>
      <url>2020/10/27/article03/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>archetypeCatalog<br>internal</p><p>idea常用的快捷键</p><p>Alt+回车 导入包,自动修正</p><p>Ctrl+N   查找类</p><p>Ctrl+Shift+N 查找文件</p><p>Ctrl+Alt+L  格式化代码</p><p>Ctrl+Alt+O 优化导入的类和包</p><p>Alt+Insert 生成代码(如get,set方法,构造函数等)</p><p>Ctrl+E或者Alt+Shift+C  最近更改的代码</p><p>Ctrl+R 替换文本</p><p>Ctrl+F 查找文本</p><p>Ctrl+Shift+Space 自动补全代码</p><p>Ctrl+空格 代码提示</p><p>Ctrl+Alt+Space 类名或接口名提示</p><p>Ctrl+P 方法参数提示</p><p>Ctrl+Shift+Alt+N 查找类中的方法或变量</p><p>Alt+Shift+C 对比最近修改的代码</p><p>Shift+F6  重构-重命名</p><p>Ctrl+Shift+先上键</p><p>Ctrl+X 删除行</p><p>Ctrl+D 复制行</p><p>Ctrl+/ 或 Ctrl+Shift+/  注释（// 或者/<em>…</em>/ ）</p><p>Ctrl+J  自动代码</p><p>Ctrl+E 最近打开的文件</p><p>Ctrl+H 显示类结构图</p><p>Ctrl+Q 显示注释文档</p><p>Alt+F1 查找代码所在位置</p><p>Alt+1 快速打开或隐藏工程面板</p><p>Ctrl+Alt+ left/right 返回至上次浏览的位置</p><p>Alt+ left/right 切换代码视图</p><p>Alt+ Up/Down 在方法间快速移动定位</p><p>Ctrl+Shift+Up/Down 代码向上/下移动。</p><p>F2 或Shift+F2 高亮错误或警告快速定位</p><p>代码标签输入完成后，按Tab，生成代码。</p><p>选中文本，按Ctrl+Shift+F7 ，高亮显示所有该文本，按Esc高亮消失。</p><p>Ctrl+W 选中代码，连续按会有其他效果</p><p>选中文本，按Alt+F3 ，逐个往下查找相同文本，并高亮显示。</p><p>Ctrl+Up/Down 光标跳转到第一行或最后一行下</p><p>Ctrl+B 快速打开光标处的类或方法 </p><p>Intellij IDEA最常用快捷键</p><p>1.Ctrl＋E，可以显示最近编辑的文件列表</p><p>2.Shift＋Click可以关闭文件</p><p>3.Ctrl＋[或]可以跳到大括号的开头结尾</p><p>4.Ctrl＋Shift＋Backspace可以跳转到上次编辑的地方</p><p>5.Ctrl＋F12，可以显示当前文件的结构</p><p>6.Ctrl＋F7可以查询当前元素在当前文件中的引用，然后按F3可以选择</p><p>7.Ctrl＋N，可以快速打开类</p><p>8.Ctrl＋Shift＋N，可以快速打开文件</p><p>9.Alt＋Q可以看到当前方法的声明</p><p>10.Ctrl＋W可以选择单词继而语句继而行继而函数</p><p>11.Alt＋F1可以将正在编辑的元素在各个面板中定位</p><p>12.Ctrl＋P，可以显示参数信息</p><p>13.Ctrl＋Shift＋Insert可以选择剪贴板内容并插入</p><p>14.Alt＋Insert可以生成构造器/Getter/Setter等</p><p>15.Ctrl＋Alt＋V 可以引入变量。例如把括号内的SQL赋成一个变量</p><p>16.Ctrl＋Alt＋T可以把代码包在一块内，例如try/catch</p><p>17.Alt＋Up and Alt＋Down可在方法间快速移动</p>]]></content>
      
      
      <categories>
          
          <category> idea </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一招解决GitHub致命的下载速度</title>
      <link href="2020/10/27/article04/"/>
      <url>2020/10/27/article04/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>通过码云来导入github，通过码云下载</p></blockquote><p>第一步：<br /><strong>找一个你需要下载的GitHub项目</strong><img src="https://img-blog.csdnimg.cn/20200328093031557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ExNDM5Nzc1NTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p><p><strong>第二步：<br />复制链接</strong><br /><img src="https://img-blog.csdnimg.cn/20200328093109637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ExNDM5Nzc1NTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p><p><strong>第三步：<br />打开码云，然后选择从GitHub导入</strong><br /><img src="https://img-blog.csdnimg.cn/20200328093143714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ExNDM5Nzc1NTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p><p><strong>第四步：<br />复制刚才的连接，起个名字，点击导入</strong><br /><img src="https://img-blog.csdnimg.cn/20200328093223266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ExNDM5Nzc1NTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /><br /><strong>这个过程大概一两分钟</strong><br /><img src="https://img-blog.csdnimg.cn/20200328093315682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ExNDM5Nzc1NTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p><p>导入完成：直接下载zip<br /><img src="https://img-blog.csdnimg.cn/20200328093348780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ExNDM5Nzc1NTIw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" /></p><p>一个完整的过程动图<br /><img src="https://img-blog.csdnimg.cn/20200328094952899.gif" alt="在这里插入图片描述" /></p><h2><a id="PS_gitgitconfigremoteoriginurlgiteegithub_34"></a><code>PS： 如需更改git中的项目，打开你的项目，找到隐藏的文件夹git，记事本打开config，然后把remote"origin"中的url的gitee改成github</code></h2>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
